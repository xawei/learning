apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: aws-load-balancer-controller
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
  # Cluster Generator - discovers cluster secrets and creates one AWS LBC per cluster
  - clusters:
      selector:
        matchLabels:
          argocd.argoproj.io/secret-type: cluster
      values:
        # Default values for all clusters (can be overridden per cluster)
        region: ap-southeast-1
        replicaCount: "1"
        logLevel: info
  template:
    metadata:
      name: 'aws-load-balancer-controller-{{.nameNormalized}}'
      namespace: argocd
      finalizers:
        - resources-finalizer.argocd.argoproj.io
    spec:
      project: default
      source:
        repoURL: https://aws.github.io/eks-charts
        chart: aws-load-balancer-controller
        targetRevision: 1.13.2
        helm:
          values: |
            # DYNAMIC cluster name - {{.name}} gets substituted per cluster!
            clusterName: {{.name}}
            region: {{.values.region}}

            replicaCount: {{.values.replicaCount}}

            # Toleration for Karpenter infra nodepool
            tolerations:
            - key: "karpenter.sh/nodepool"
              operator: "Equal"
              value: "infra"
              effect: "NoSchedule"

            # Settings for AWS EKS cluster
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                cpu: 300m
                memory: 512Mi

            # Enable webhook
            enableCertManager: true

            # Logging level
            logLevel: {{.values.logLevel}}

            # Service account with IAM role for AWS EKS
            serviceAccount:
              annotations:
                eks.amazonaws.com/role-arn: "arn:aws:iam::ACCOUNT_ID:role/AWSLoadBalancerControllerRole"
      destination:
        server: '{{.server}}'
        namespace: aws-load-balancer-controller
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
        retry:
          limit: 5
          backoff:
            duration: 5s
            factor: 2
            maxDuration: 3m
      # Fix for AWS LBC out of sync issues (from Medium article)
      ignoreDifferences:
        - kind: Secret
          name: aws-load-balancer-tls
          jsonPointers:
            - /data/ca.crt
            - /data/tls.crt
            - /data/tls.key
        - group: admissionregistration.k8s.io
          kind: MutatingWebhookConfiguration
          name: aws-load-balancer-webhook
          jsonPointers:
            - /webhooks/0/clientConfig/caBundle
            - /webhooks/1/clientConfig/caBundle
            - /webhooks/2/clientConfig/caBundle
        - group: admissionregistration.k8s.io
          kind: ValidatingWebhookConfiguration
          name: aws-load-balancer-webhook
          jsonPointers:
            - /webhooks/0/clientConfig/caBundle
            - /webhooks/1/clientConfig/caBundle
            - /webhooks/2/clientConfig/caBundle 